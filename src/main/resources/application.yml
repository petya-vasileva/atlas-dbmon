# ===============================
# = PROFILES /
#             server
#             ...
# ===============================
# Defaults
# schemaname : DBMON_SCHEMA or none
# security options: reco (no POST allowed), weak (no authentication needed), active (GET and POST requires roles)
#    security.strategy: MODE_INHERITABLETHREADLOCAL

crest:
  dump_dir: /tmp/crest-dump/
  schemaname: none
  security: none
  synchro: none

server:
    port: 8090
    servlet-path: /

spring:
    security:
      enabled: false
    jersey:
      application-path: /dbmonapi
    datasource:
      url: jdbc:h2:/tmp/cresth2;DB_CLOSE_ON_EXIT=FALSE
      driverClassName: org.h2.Driver
      username: root
      password: root
##      dbcp2:
##        test-while-idle: true
##        validation-query: SELECT 1 FROM DUAL
---
spring:
  profiles: ssl
server:
  port: 8443
  ssl:
    key-store: classpath:dbmon.jks
    key-store-password: ${store.password}
    key-password: ${key.password}  
---
spring:
    profiles: wildfly
    jersey:
      application-path: /dbmonapi
    datasource:
##      url: jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=db-d0002.cern.ch)(PORT=10654))(ENABLE=BROKEN)(CONNECT_DATA=(SERVICE_NAME=test1.cern.ch)))
      url: jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS= (PROTOCOL=TCP) (HOST=offdb-s.cern.ch) (PORT=10121) )(LOAD_BALANCE=on)(ENABLE=BROKEN)(CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME=offdb.cern.ch)))
      driverClassName: oracle.jdbc.OracleDriver
      username: DBMON_SCHEMA_R
      password: ${crest.db.password}
server:
    port: 8080 
crest:
  schemaname: DBMON_SCHEMA  
---
spring:
    profiles: undertow
    jersey:
      application-path: /dbmonapi
    datasource:
##      url: jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=db-d0002.cern.ch)(PORT=10654))(ENABLE=BROKEN)(CONNECT_DATA=(SERVICE_NAME=test1.cern.ch)))
      url: jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS= (PROTOCOL=TCP) (HOST=offdb-s.cern.ch) (PORT=10121) )(LOAD_BALANCE=on)(ENABLE=BROKEN)(CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME=offdb.cern.ch)))
      driverClassName: oracle.jdbc.OracleDriver
      username: DBMON_SCHEMA_R
      password: ${crest.db.password}
      type: com.zaxxer.hikari.HikariDataSource
      hikari:
        idle-timeout: 10000
        connection-test-query: SELECT 1 FROM DUAL
        maximum-pool-size: 100
        auto-commit: true
server:
    port: 8080
crest:
  schemaname: DBMON_SCHEMA
---
spring:
    profiles: prod
    jersey:
      application-path: /dbmonapi
    datasource:
##      url: jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=db-d0002.cern.ch)(PORT=10654))(ENABLE=BROKEN)(CONNECT_DATA=(SERVICE_NAME=test1.cern.ch)))
      url: jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=localhost)(PORT=10500))(LOAD_BALANCE=on)(ENABLE=BROKEN)(CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME=test1.cern.ch)))
      driverClassName: oracle.jdbc.OracleDriver
      username: DBMON_SCHEMA_R
      password: ${crest.db.password}
      type: com.zaxxer.hikari.HikariDataSource
      hikari:
        idle-timeout: 100000
        connection-test-query: SELECT 1 FROM DUAL
        maximum-pool-size: 8
        auto-commit: true
server:
    port: 8080 
crest:
  schemaname: DBMON_SCHEMA
---
spring:
    profiles: dev
    jersey:
      application-path: /dbmonapi
    datasource:
##      url: jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=db-d0002.cern.ch)(PORT=10654))(ENABLE=BROKEN)(CONNECT_DATA=(SERVICE_NAME=test1.cern.ch)))
      url: jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=localhost)(PORT=10500))(LOAD_BALANCE=on)(ENABLE=BROKEN)(CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME=test1.cern.ch)))
      driverClassName: oracle.jdbc.OracleDriver
      username: DBMON_SCHEMA_R
      password: ${crest.db.password}
      type: com.zaxxer.hikari.HikariDataSource
      hikari:
        idle-timeout: 10000
        connection-test-query: SELECT 1 FROM DUAL
        maximum-pool-size: 8
        auto-commit: true
server:
    port: 8080 
    tomcat:
      max-connections: 100
crest:
  schemaname: DBMON_SCHEMA
  
